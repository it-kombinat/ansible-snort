---
- name: config_snort | configuring snort
  template:
    src: etc/snort/snort.conf.j2
    dest: /etc/snort/snort.conf
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart snort
  when: ansible_os_family == "Debian"

- name: config_snort | configuring snort
  template:
    src: etc/snort/snort.conf.j2
    dest: /etc/snort/snort.conf
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart snortd
  when: ansible_os_family == "RedHat"

- name: config_snort | configuring snort
  template:
    src: etc/sysconfig/snort.j2
    dest: /etc/sysconfig/snort
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart snortd
  when: ansible_os_family == "RedHat"

- name: config_snort | configuring snort rule myrules.rules
  template:
    src: etc/snort/rules/myrules.rules.j2
    dest: /etc/snort/rules/myrules.rules
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "RedHat"

- name: config_snort | configuring snort service
  template:
    src: etc/systemd/snort.service.j2
    dest: /etc/systemd/system/snort.service
    mode: 755

- name: config_snort | downloading snort commmunity rules
  get_url:
    url: "{{ snort_community_rules_url }}/{{ snort_community_rules_package }}"
    dest: "/usr/local/src/{{ snort_community_rules_package }}"
  become: true
  when: ansible_os_family == "RedHat"

- name: config_snort | extracting snort commmunity rules
  unarchive:
    src: "/usr/local/src/{{ snort_community_rules_package }}"
    dest: "{{ snort_rule_path }}"
    copy: false
  become: true
  when: ansible_os_family == "RedHat"

- name: config_snort | enable snort.service and ensure it is not masked                                                                          
  systemd:
    name: snort.service
    enabled: yes
    state: started
    daemon_reload: yes
    masked: no
